# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
 # Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# The configuration file needs to define the sources,
# the channels and the sinks.
# Sources, channels and sinks are defined per agent,
# in this case called 'agent'

 agent1.sources = source1 source2 source3 source4
 agent1.channels = channel1
 agent1.sinks = sink1

 # For each one of the sources, the type is defined
 agent1.sources.source1.type = exec
 agent1.sources.source1.shell = /bin/bash -c
 agent1.sources.source1.command = while [ : ]; do free | grep "Mem" | awk -v host=`hostname` -v date="$(date +%s)" '{split($0, a, " "); print "CLUSTER01"","host",""MEMORY_USED(KB)"","a[3]","date}'; sleep 5; done
 agent1.sources.source1.channels = channel1
 agent1.sources.source1.pollDelay = 10000
# sources2
 agent1.sources.source2.type = exec
 agent1.sources.source2.shell = /bin/bash -c
 agent1.sources.source2.command = while [ : ]; do mpstat | grep "all" | awk -v host=`hostname` -v date="$(date +%s)" '{print "CLUSTER01"","host",""USER_CPU_USED(PC)"","$4","date}'; sleep 5; done
 agent1.sources.source2.channels = channel1
 agent1.sources.source2.pollDelay = 10000
 # sources3
 agent1.sources.source3.type = exec
 agent1.sources.source3.shell = /bin/bash -c
 agent1.sources.source3.command = while [ : ]; do df -P | grep -v ^Filesystem | awk -v host=`hostname` -v date="$(date +%s)" '{sum += $3} END { print  "CLUSTER01"","host",""DISK_USED(MB)"","sum/1000","date}'; sleep 5; done
 agent1.sources.source3.channels = channel1
 agent1.sources.source3.pollDelay = 10000
 # sources4
 agent1.sources.source4.type = exec
 agent1.sources.source4.shell = /bin/bash -c
 agent1.sources.source4.command = while [ : ]; do tx1=`netstat -i | grep "enp5s0" | awk '{print $7}'`; sleep 5; netstat -i | grep "enp5s0" | awk -v tx1=$tx1 -v host=`hostname` -v date="$(date +%s)" '{print "CLUSTER01"","host",""NETWORK_TX(KB)"","$7-tx1","date}'; done
 agent1.sources.source4.channels = channel1
 agent1.sources.source4.pollDelay = 10000
 # The channel can be defined as follows.
 agent1.channels.channel1.type = memory
 agent1.channels.channel1.capacity = 10000
 agent1.channels.channel1.transactionCapacity = 1000


 # Each sink's type must be defined
 agent1.sinks.sink1.type = org.apache.flume.sink.kafka.KafkaSink
 agent1.sinks.sink1.topic = topic-test
 agent1.sinks.sink1.brokerList = SN01.eth:9092,SN02.eth:9092,SN03.eth:9092,SN04.eth:9092,SN05.eth:9092,SN06.eth:9092,SN07.eth:9092,SN08.eth:9092
 agent1.sinks.sink1.channel = channel1
 agent1.sinks.sink1.batchSize = 1
 agent1.sinks.sink1.kafka.producer.acks = 1